/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'maven-publish'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // api('com.sematext.hbasewd:hbasewd:0.1.0')
    api('org.apache.hbase:hbase-shaded-client:1.4.13') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'org.mortbay.jetty', module: 'servlet-api-2.5'
    }
    api('org.apache.hbase:hbase-shaded-server:1.4.13') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'org.mortbay.jetty', module: 'servlet-api-2.5'
    }

    testImplementation('org.apache.hbase:hbase-shaded-testing-util:1.4.13') {
        // exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'org.mortbay.jetty', module: 'servlet-api-2.5'
        exclude group: 'tomcat', module: 'jasper-runtime'
    }

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    testRuntimeOnly('org.apache.hbase:hbase-client:1.2.12') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'org.mortbay.jetty', module: 'servlet-api-2.5'
        exclude group: 'tomcat', module: 'jasper-runtime'
    }

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

// Enforce Java8 for portability.
// Should work with anything newer if you're willing to recompile it yourself.
def javaVersion = JavaVersion.VERSION_1_8
sourceCompatibility = javaVersion
targetCompatibility = javaVersion
task enforceVersion {
    doFirst {
        def foundVersion = JavaVersion.current()
        if (foundVersion != javaVersion)
            throw new IllegalStateException("Wrong Java version; required is "
                    + javaVersion + ", but found " + foundVersion)
    }
}
compileJava.dependsOn(enforceVersion)

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}

group = 'com.sematext.hbasewd'
version = '0.3.0-SNAPSHOT'

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}
